#ifndef HTML_DATA_H
#define HTML_DATA_H

const char *html_data =
"<!DOCTYPE html>"
"<html lang='pt-BR'>"
"<head>"
"<meta charset='UTF-8'>"
"<meta name='viewport' content='width=device-width,initial-scale=1.0'>"
"<title>Estação Meteorológica - Itabuna, BA</title>"
"<script src='https://cdn.tailwindcss.com'></script>"
"<script src='https://cdn.jsdelivr.net/npm/apexcharts'></script>"
"<link rel='preconnect' href='https://fonts.googleapis.com'>"
"<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin>"
"<link href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap' rel='stylesheet'>"
"<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'>"
"<style>"
"body{font-family:'Inter',sans-serif;background-color:#111827;color:#F9FAFB}"
".data-card{background-color:#1F2937;border-radius:.75rem;padding:1.5rem;border:1px solid #374151;transition:transform .2s ease-in-out,box-shadow .2s ease-in-out}"
".data-card:hover{transform:translateY(-5px);box-shadow:0 10px 15px -3px rgba(0,0,0,.2),0 4px 6px -2px rgba(0,0,0,.1)}"
".chart-btn{padding:.5rem 1rem;border-radius:.5rem;background-color:#374151;color:#F9FAFB;font-weight:500;transition:background-color .2s}"
".chart-btn.active,.chart-btn:hover{background-color:#4F46E5}"
".card-icon{font-size:3rem;margin-bottom:15px;display:block}"
".config-input{background:#1F2937;border:1px solid #374151;border-radius:.375rem;padding:.5rem;color:#F9FAFB;width:70px;text-align:center}"
".config-input:focus{outline:none;border-color:#4F46E5}"
".config-btn{background:#4F46E5;color:white;border:none;padding:.5rem 1rem;border-radius:.375rem;cursor:pointer;transition:background-color .2s}"
".config-btn:hover{background:#4338CA}"
"</style>"
"</head>"
"<body class='p-4 md:p-8'>"
"<div class='max-w-7xl mx-auto'>"
"<header class='text-center mb-8'>"
"<h1 class='text-4xl md:text-5xl font-bold text-white'><i class='fas fa-cloud-sun text-blue-400'></i> Estação Meteorológica</h1>"
"<p class='text-lg text-gray-400 mt-2'><i class='fa-solid fa-location-dot'></i> Itabuna, Bahia</p>"
"<div class='mt-4 flex items-center justify-center space-x-2'>"
"<div class='w-3 h-3 bg-green-500 rounded-full animate-pulse'></div>"
"<span id='status-text' class='text-green-400 font-medium'>Online</span>"
"<span class='text-gray-500'>•</span>"
"<span id='last-update' class='text-gray-400'><i class='fas fa-clock text-blue-400'></i> Última atualização: --:--:--</span>"
"</div>"
"</header>"
"<section class='mb-6'>"
"<div class='data-card'>"
"<h3 class='text-lg font-medium text-gray-300 mb-3'><i class='fas fa-cog text-blue-400 mr-2'></i>Configurações</h3>"
"<div class='flex flex-wrap items-center gap-4'>"
"<div class='flex items-center space-x-2'>"
"<label class='text-sm text-gray-400'>Temp Min:</label>"
"<input type='number' id='min-temp' class='config-input' value='10' min='-50' max='50'>"
"<span class='text-gray-400'>°C</span>"
"</div>"
"<div class='flex items-center space-x-2'>"
"<label class='text-sm text-gray-400'>Temp Max:</label>"
"<input type='number' id='max-temp' class='config-input' value='70' min='-50' max='100'>"
"<span class='text-gray-400'>°C</span>"
"</div>"
"<div class='flex items-center space-x-2'>"
"<label class='text-sm text-gray-400'>Offset:</label>"
"<input type='number' id='temp-offset' class='config-input' value='0' min='-10' max='10' step='0.1'>"
"<span class='text-gray-400'>°C</span>"
"</div>"
"<button class='config-btn' onclick='saveLimits()'><i class='fas fa-save mr-1'></i>Salvar</button>"
"</div>"
"</div>"
"</section>"
"<section class='mb-8'>"
"<h2 class='text-2xl font-bold text-white mb-4'>Condições Atuais</h2>"
"<div class='grid grid-cols-1 md:grid-cols-3 gap-6'>"
"<div class='data-card text-center'>"
"<i class='fas fa-thermometer-half card-icon text-orange-400'></i>"
"<p class='text-lg font-medium text-gray-300'>Temperatura</p>"
"<p id='temp-value' class='text-6xl font-bold text-amber-400 my-4'>--.- °C</p>"
"</div>"
"<div class='data-card text-center'>"
"<i class='fas fa-tint card-icon text-cyan-400'></i>"
"<p class='text-lg font-medium text-gray-300'>Umidade</p>"
"<p id='humidity-value' class='text-6xl font-bold text-sky-400 my-4'>-- %</p>"
"</div>"
"<div class='data-card text-center'>"
"<i class='fas fa-gauge-high card-icon text-violet-400'></i>"
"<p class='text-lg font-medium text-gray-300'>Pressão Atmosférica</p>"
"<p id='pressure-value' class='text-6xl font-bold text-violet-400 my-4'>---- hPa</p>"
"</div>"
"</div>"
"</section>"
"<section class='mb-8 data-card'>"
"<div class='flex flex-col md:flex-row justify-between items-start md:items-center mb-4'>"
"<h2 class='text-2xl font-bold text-white mb-4 md:mb-0'>Histórico das Últimas Horas</h2>"
"<div id='chart-controls' class='flex space-x-2'>"
"<button class='chart-btn active' data-metric='temp'>Temperatura</button>"
"<button class='chart-btn' data-metric='humidity'>Umidade</button>"
"<button class='chart-btn' data-metric='pressure'>Pressão</button>"
"</div>"
"</div>"
"<div id='chart'></div>"
"</section>"
"<section>"
"<h2 class='text-2xl font-bold text-white mb-4'>Informações Adicionais</h2>"
"<div class='grid grid-cols-1 md:grid-cols-2 gap-6'>"
"<div class='data-card text-center'>"
"<i class='fas fa-mountain card-icon text-emerald-400'></i>"
"<p class='text-lg font-medium text-gray-300'>Altitude Estimada</p>"
"<p id='altitude-value' class='text-6xl font-bold text-emerald-400 my-4'>---- m</p>"
"<p class='text-gray-400'>Baseada na pressão atual</p>"
"</div>"
"<div class='data-card'>"
"<h3 class='text-lg font-medium text-gray-300 mb-4'>Detalhes dos Sensores</h3>"
"<ul class='space-y-2 text-gray-400'>"
"<li><strong>Pressão/Temp:</strong> BMP280</li>"
"<li><strong>Umidade/Temp:</strong> AHT20</li>"
"<li><strong>Plataforma:</strong> Raspberry Pi Pico W</li>"
"</ul>"
"</div>"
"</div>"
"</section>"
"<footer class='text-center mt-12 text-gray-500'>"
"<p>&copy; 2025 - Projeto de Estação Meteorológica</p>"
"</footer>"
"</div>"
"<script>"
"let currentMetric='temp',chartData={temp:Array(20).fill(0),humidity:Array(20).fill(0),pressure:Array(20).fill(0),categories:Array(20).fill(null).map((_,i)=>{const d=new Date();d.setSeconds(d.getSeconds()-(20-i)*5);return d.toLocaleTimeString('pt-BR',{hour:'2-digit',minute:'2-digit',second:'2-digit'})})},state={maxLimit:70,minLimit:10,offset:0,userEditing:false};"
"const chartOptions={series:[{name:'Temperatura',data:chartData.temp}],chart:{height:350,type:'area',toolbar:{show:false},zoom:{enabled:false},animations:{enabled:true,easing:'linear',dynamicAnimation:{speed:1000}}},dataLabels:{enabled:false},stroke:{curve:'smooth',width:3},xaxis:{categories:chartData.categories,labels:{style:{colors:'#9CA3AF'}}},yaxis:{labels:{style:{colors:'#9CA3AF'},formatter:val=>val.toFixed(1)}},tooltip:{theme:'dark',x:{format:'HH:mm:ss'}},grid:{borderColor:'#374151',strokeDashArray:5},colors:['#FBBF24']},chart=new ApexCharts(document.querySelector('#chart'),chartOptions);"
"chart.render();"
"function saveLimits(){const minTemp=parseInt(document.getElementById('min-temp').value),maxTemp=parseInt(document.getElementById('max-temp').value),tempOffset=parseFloat(document.getElementById('temp-offset').value);if(minTemp>=maxTemp){alert('Temperatura mínima deve ser menor que máxima!');return}if(tempOffset<-10||tempOffset>10){alert('Offset deve estar entre -10°C e +10°C!');return}state.minLimit=minTemp;state.maxLimit=maxTemp;state.offset=tempOffset;state.userEditing=false;fetch('/api/limits',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({min:minTemp,max:maxTemp,offset:tempOffset})}).then(r=>r.text()).then(data=>{alert('Limites e offset salvos!');console.log('Resposta:',data)}).catch(e=>{alert('Erro ao salvar!');console.error('Erro:',e);state.userEditing=false})}"
"document.getElementById('min-temp').addEventListener('focus',()=>{state.userEditing=true});"
"document.getElementById('max-temp').addEventListener('focus',()=>{state.userEditing=true});"
"document.getElementById('temp-offset').addEventListener('focus',()=>{state.userEditing=true});"
"document.getElementById('min-temp').addEventListener('input',()=>{state.userEditing=true});"
"document.getElementById('max-temp').addEventListener('input',()=>{state.userEditing=true});"
"document.getElementById('temp-offset').addEventListener('input',()=>{state.userEditing=true});"
"async function updateData(){try{const r=await fetch('/api/weather'),d=await r.json(),newTemp=d.temperature,newHumidity=d.humidity,newPressure=d.pressure,newAltitude=d.altitude;if(!state.userEditing){if(d.maxTemperature!==undefined){state.maxLimit=d.maxTemperature;document.getElementById('max-temp').value=d.maxTemperature}if(d.minTemperature!==undefined){state.minLimit=d.minTemperature;document.getElementById('min-temp').value=d.minTemperature}if(d.tempOffset!==undefined){state.offset=d.tempOffset;document.getElementById('temp-offset').value=d.tempOffset}}const tempWithOffset=newTemp+state.offset;document.getElementById('temp-value').textContent=tempWithOffset.toFixed(1)+' °C';document.getElementById('humidity-value').textContent=Math.round(newHumidity)+' %';document.getElementById('pressure-value').textContent=Math.round(newPressure)+' hPa';document.getElementById('altitude-value').textContent=Math.round(newAltitude)+' m';const now=new Date();document.getElementById('last-update').innerHTML='<i class=\"fas fa-clock text-blue-400\"></i> Última atualização: '+now.toLocaleTimeString('pt-BR');chartData.temp.push(tempWithOffset);chartData.humidity.push(newHumidity);chartData.pressure.push(newPressure);chartData.categories.push(now.toLocaleTimeString('pt-BR',{hour:'2-digit',minute:'2-digit',second:'2-digit'}));if(chartData.temp.length>20){chartData.temp.shift();chartData.humidity.shift();chartData.pressure.shift();chartData.categories.shift()}updateChartSeries()}catch(e){console.error('Erro:',e)}}"
"function updateChartSeries(){let seriesName='',data=[],color='';switch(currentMetric){case'humidity':seriesName='Umidade';data=chartData.humidity;color='#38BDF8';break;case'pressure':seriesName='Pressão';data=chartData.pressure;color='#A78BFA';break;default:seriesName='Temperatura';data=chartData.temp;color='#FBBF24'}chart.updateOptions({xaxis:{categories:chartData.categories},colors:[color]});chart.updateSeries([{name:seriesName,data:data}])}"
"document.getElementById('chart-controls').addEventListener('click',e=>{if(e.target.tagName==='BUTTON'){document.querySelectorAll('.chart-btn').forEach(btn=>btn.classList.remove('active'));e.target.classList.add('active');currentMetric=e.target.dataset.metric;updateChartSeries()}});"
"setInterval(updateData,1000);"
"updateData();"
"</script>"
"</body>"
"</html>";

#endif // HTML_DATA_H
